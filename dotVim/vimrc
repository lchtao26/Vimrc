" ========================== Plugin
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'https://github.com.cnpmjs.org/joshdick/onedark.vim'
Plugin 'https://github.com.cnpmjs.org/AndrewRadev/splitjoin.vim'
Plugin 'https://github.com.cnpmjs.org/tpope/vim-surround'
Plugin 'https://github.com.cnpmjs.org/tpope/vim-commentary'
Plugin 'https://github.com.cnpmjs.org/bronson/vim-visual-star-search'
Plugin 'https://github.com.cnpmjs.org/dense-analysis/ale'
Plugin 'https://github.com.cnpmjs.org/prettier/vim-prettier'
Plugin 'https://github.com.cnpmjs.org/sheerun/vim-polyglot'
Plugin 'https://github.com.cnpmjs.org/darthmall/vim-vue'
Plugin 'https://github.com.cnpmjs.org/dbakker/vim-projectroot'
Plugin 'https://github.com.cnpmjs.org/kien/ctrlp.vim'
Plugin 'https://github.com.cnpmjs.org/SirVer/ultisnips'
call vundle#end()

" Netrw
let g:netrw_list_hide= '.*\.swp$,.*\.swo$'

" CtrlP
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_use_caching = 0
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.yardoc\|node_modules\|log\|tmp$\|dist',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }

" OneDark
let g:onedark_hide_endofbuffer=1
let g:onedark_termcolors=256

" UltiSnips
let g:UltiSnipsSnippetsDir="~/.vim"
let g:UltiSnipsSnippetDirectories=["myUltiSnippets"]

" ALE
let g:ale_sign_column_always = 1
let g:ale_linters_explicit = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0
let g:ale_lint_on_save=1

let g:ale_linters = {
\   'javascript': ['eslint'],
\   'vue': ['eslint'],
\   'javascriptreact': ['eslint'],
\}
let g:ale_fixers = {
\   '*': ['eslint'],
\}

" Surround
let g:surround_{char2nr(">")} = "<\r>"

" ====================== BootStrap 
augroup init
  autocmd!
" populate arglist and clean all, for autocompletion for the snippets item name
  autocmd VimEnter * silent! argadd ~/.vim/myUltiSnippets/*.snippets | argdelete *
  autocmd BufEnter * silent! lcd %:p:h
  autocmd BufNewFile,BufReadPost *.wxml set ft=wxml.html
  autocmd BufNewFile,BufReadPost *.wxss set ft=wxss.css
  autocmd BufNewFile,BufReadPost *.jsx set ft=javascript.javascriptreact
augroup END

filetype plugin indent on
syntax on
set autoindent
set autoread
set backspace=indent,eol,start
set visualbell
set cursorline
set complete+=k
set dictionary+=/usr/share/dict/words
set hidden
set hlsearch
set incsearch
set laststatus=2
set statusline=%F
set number
set ruler
set ignorecase
set smartcase
set tabstop=2 shiftwidth=2
set expandtab
set undodir=/tmp
set undofile
set wildmenu
set wildmode=list:longest,full
set path+=$PWD/**
set wildignore+=**/node_modules/** 
set includeexpr=substitute(v:fname,'^\\/','','')
set suffixesadd=.js,.jsx,.es,.es6,.cjs,.mjs,.jsm,.vue,.json,.ts
set termguicolors
colorscheme onedark

" =================== Keys Mapping
let mapleader = " "
nnoremap <Leader>f :Prettier<CR>
nnoremap <Leader>l :ALEFix<CR>
nnoremap <Leader>r <Plug>NetrwRefresh

noremap <Leader>. :vs $MYVIMRC<CR>
noremap <Leader>so :so $MYVIMRC<CR>

" Copy current file path
noremap <Leader>cp :let @+ = expand("%:p")<CR>
" Quick directory change
nnoremap <Leader>cd :cd %:p:h<CR>:pwd<CR>

noremap <Leader>y "+y
noremap <Leader>Y "+Y

nnoremap ! :!
cnoremap :: <C-R>=projectroot#guess().'/'<CR>

" Emmet like: div => <div><div>
inoremap <S-Tab> <Esc>yiWi<<Esc>Emma></<C-r>"><Esc>`ma
nnoremap S :w<CR>
nnoremap Q :q<CR>

noremap L :tabnext<CR>
noremap H :tabprevious<CR>
noremap <C-n> :tabnew<Cr>


map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
