" ========================== Plugin
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'AndrewRadev/splitjoin.vim'
Plugin 'bronson/vim-visual-star-search'
Plugin 'brooth/far.vim'
Plugin 'darthmall/vim-vue'
Plugin 'dbakker/vim-projectroot'
Plugin 'dense-analysis/ale'
Plugin 'joshdick/onedark.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'prettier/vim-prettier'
Plugin 'sheerun/vim-polyglot'
Plugin 'SirVer/ultisnips'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'VundleVim/Vundle.vim'
call vundle#end()

" Netrw
let g:netrw_list_hide= '.*\.swp$,.*\.swo$'

" CtrlP
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_use_caching = 0
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.yardoc\|node_modules\|log\|tmp$\|dist',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }


" OneDark
let g:onedark_hide_endofbuffer=1
let g:onedark_termcolors=256
"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

" UltiSnips
let g:UltiSnipsSnippetsDir="~/.vim"
let g:UltiSnipsSnippetDirectories=["myUltiSnippets"]


" ALE
let g:ale_sign_column_always = 1
let g:ale_linters_explicit = 1
let g:ale_lint_on_text_changed = 'never'
let g:ale_lint_on_insert_leave = 0
let g:ale_lint_on_enter = 0
let g:ale_lint_on_save=1

let g:ale_linters = {
\   'javascript': ['eslint'],
\   'vue': ['eslint'],
\   'javascriptreact': ['eslint'],
\}
let g:ale_fixers = {
\   '*': ['eslint'],
\}
"

" ====================== BootStrap 
au BufNewFile,BufReadPost *.wxml set ft=html
au BufNewFile,BufReadPost *.wxss set ft=css
au BufEnter * silent! lcd %:p:h

colorscheme onedark
filetype plugin indent on
syntax on

set autoindent
set autoread
set backspace=indent,eol,start
set visualbell
set cursorline
set complete+=k
set dictionary+=/usr/share/dict/words
set hidden
set hlsearch
set incsearch
set laststatus=2
set statusline=%F
set number
set path+=**
set ruler
set ignorecase
set smartcase
set tabstop=2 shiftwidth=2
set expandtab
set wildmenu
set wildmode=list:longest,full
set undofile
set undodir=~/.vim/undo
set includeexpr=substitute(v:fname,'^\\/','','')
set suffixesadd=.js,.jsx,.es,.es6,.cjs,.mjs,.jsm,.vue,.json

" =================== Keys Mapping
noremap <Leader>af :ALEFix<CR>
noremap <Leader>cp :let @+ = expand("%:p")<CR>
noremap <Leader>so :source $MYVIMRC<CR>

cnoremap :: <C-R>=projectroot#guess().'/'<CR>

nnoremap <C-s> :w<CR>
vnoremap <C-s> <Esc><C-s>gv
inoremap <C-s> <Esc><C-s>

noremap <C-n> :tabnew<Cr>
noremap L :tabnext<CR>
noremap H :tabprevious<CR>
